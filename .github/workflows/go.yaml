name: Go Tests

on:
  push:
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

      # doesn't like cockroach-data not existing.
     #cockroachdb:
     #  image: cockroachdb/cockroach:latest-v22.2
     #  ports:
     #     - 26257:26257
     #  options: >-
     #     cockroachdb/cockroach:latest-v22.2 start-single-node --insecure --store type=mem,size=2G

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Databases
        working-directory: .github
        run: docker-compose up -d cockroachdb mysql postgresql

      # Just cache based on job and go.sum contents.
      - name: Write cache key
        run: echo '${{ github.job }} ${{ hashFiles('go.sum') }}' > CACHE_KEY

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
          cache-dependency-path: CACHE_KEY

      - name: Setup test database
        run: PGPASSWORD=postgres psql -U postgres -h localhost -c "CREATE DATABASE testdb"

      - name: Test
        run: |
          POSTGRES_URL="postgres://postgres:postgres@localhost:5432/testdb" go test -race -v 2>&1 ./... | tee test_output.txt
          go run github.com/jstemmer/go-junit-report -set-exit-code < test_output.txt > report.xml

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: |
            report.xml
          output: test-summary.md
        if: always()

      - name: Writing markdown summary
        run: |
          cat test-summary.md >> $GITHUB_STEP_SUMMARY
        if: always()

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: |
            test-summary.md
            test_output.txt
            report.xml
        if: always()

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=5m

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Just cache based on job and go.sum contents.
      - name: Write cache key
        run: echo '${{ github.job }} ${{ hashFiles('go.sum') }}' > CACHE_KEY

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
          cache-dependency-path: CACHE_KEY

      - name: crlfmt returns no deltas
        if: ${{ always() }}
        run: |
          DELTA=$(go run github.com/cockroachdb/crlfmt -ignore _gen.go .)
          echo $DELTA
          test -z "$DELTA"
